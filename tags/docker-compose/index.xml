<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker Compose on Wright Development</title>
    <link>https://wright-development.github.io/tags/docker-compose/</link>
    <description>Recent content in Docker Compose on Wright Development</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Wright Development &amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Sat, 16 Sep 2017 13:39:28 -0600</lastBuildDate>
    
	<atom:link href="https://wright-development.github.io/tags/docker-compose/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Docker for .NET Core Integration Testing</title>
      <link>https://wright-development.github.io/post/using-docker-for-net-core/</link>
      <pubDate>Sat, 16 Sep 2017 13:39:28 -0600</pubDate>
      
      <guid>https://wright-development.github.io/post/using-docker-for-net-core/</guid>
      <description>Recently at work, we have been discussing how to perform integration tests on .NET Core services. From previous experience, integration testing can be quite a messy process especially when performing reads and writes to a database. Have you ever had an issue with maintaining consistently correct data? Sharing a database with multiple developers? Or even setting up your own data without interfering with your teammates? If any of these problems sound familiar, then docker can be the solution for you.</description>
    </item>
    
  </channel>
</rss>